[{"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/index.js":"1","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/reportWebVitals.js":"2","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Ecommerce.js":"3","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/ThemeContext.js":"4","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/NavBar.js":"5","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/EcommerceHome/EcommereceHome.js":"6","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/EcommerceHome/Product.js":"7","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Cart/Cart.js":"8","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Cart/CartProduct.js":"9"},{"size":525,"mtime":1656703170183,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1656570641634,"results":"12","hashOfConfig":"11"},{"size":1030,"mtime":1656925245889,"results":"13","hashOfConfig":"11"},{"size":154,"mtime":1656782564425,"results":"14","hashOfConfig":"11"},{"size":669,"mtime":1656919634824,"results":"15","hashOfConfig":"11"},{"size":5823,"mtime":1656919575050,"results":"16","hashOfConfig":"11"},{"size":1309,"mtime":1656918740087,"results":"17","hashOfConfig":"11"},{"size":718,"mtime":1656925343903,"results":"18","hashOfConfig":"11"},{"size":2138,"mtime":1656927679797,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"ieb37",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/index.js",[],[],[],"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/reportWebVitals.js",[],[],"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Ecommerce.js",["51","52"],[],"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/ThemeContext.js",[],[],"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/NavBar.js",["53","54","55"],[],"import ThemeContext from \"./ThemeContext\";\nimport { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <div className=\"nav-bar\">\n      <button onClick={toggleTheme} className=\"button\">\n        Click me to change theme.\n      </button>\n      <a href=\"/\">\n        <div className=\"logo\">E-COMMERCE</div>\n      </a>\n      <div className=\"cart-icon\">\n        <Link to=\"/cart\">\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/d/df/Shopping_cart_icon.svg\"></img>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/EcommerceHome/EcommereceHome.js",["56","57"],[],"import { useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../ThemeContext\";\nimport \"../Ecommerce.css\";\nimport Product from \"./Product\";\n\nfunction buildPriceFilterString(priceFilterMinValue, priceFilterMaxValue) {\n  return (\n    \"(salePrice>=\" +\n    priceFilterMinValue +\n    \"&salePrice<=\" +\n    priceFilterMaxValue +\n    \")\"\n  );\n}\n\nfunction EcommerceHome() {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n  const [homeProducts, setHomeProducts] = useState([]);\n  const [filterOnPrice, setFilterOnPrice] = useState(\"\");\n  const [priceFilterString, setPriceFilterString] = useState(\"\");\n  const [minPrice, setMinPrice] = useState(0);\n  const [maxPrice, setMaxPrice] = useState(0);\n  const [sortBy, setSortBy] = useState(\"sku\");\n  const [sortType, setSortType] = useState(\"asc\");\n  const [category, setCategory] = useState(\"\");\n\n  let url = `https://api.bestbuy.com/v1/products${category}${filterOnPrice}?apiKey=qhqws47nyvgze2mq3qx4jadt&sort=${sortBy}.${sortType}&show=customerReviewAverage,sku,image,name,salePrice&pageSize=10&format=json`;\n\n  function categoryTV() {\n    setCategory(\"(categoryPath.id=abcat0101000)\");\n  }\n  function categoryLaptop() {\n    setCategory(\"(categoryPath.id=abcat0502000)\");\n  }\n  function categoryPS() {\n    setCategory(\"(categoryPath.id=pcmcat295700050012)\");\n  }\n  function categoryXB1() {\n    setCategory(\"(categoryPath.id=pcmcat300300050002)\");\n  }\n  function categoryHeadphones() {\n    setCategory(\"(categoryPath.id=abcat0204000)\");\n  }\n  function filterPrice0to10() {\n    setFilterOnPrice(\"(salePrice>=0&salePrice<=10)\");\n    console.log(filterOnPrice);\n  }\n\n  function filterPrice10to100() {\n    setFilterOnPrice(\"(salePrice>=10&salePrice<=100)\");\n    console.log(filterOnPrice);\n  }\n\n  function filterPrice100to500() {\n    setFilterOnPrice(\"(salePrice>=100&salePrice<=500)\");\n    console.log(filterOnPrice);\n  }\n\n  function filterPrice500AndMore() {\n    setFilterOnPrice(\"(salePrice>=500)\");\n    console.log(filterOnPrice);\n  }\n\n  function handleMinPrice(event) {\n    setMinPrice(event.target.value);\n  }\n\n  function handleMaxPrice(event) {\n    setMaxPrice(event.target.value);\n  }\n\n  function customPriceFilter() {\n    console.log(priceFilterString);\n    setFilterOnPrice(priceFilterString);\n  }\n\n  function sortByOption(event) {\n    setSortBy(event.target.value);\n  }\n\n  function sortTypeOption(event) {\n    setSortType(event.target.value);\n  }\n\n  async function fetchProducts() {\n    let response = await fetch(url);\n    let data = await response.json();\n    setHomeProducts(data.products);\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    setPriceFilterString(buildPriceFilterString(minPrice, maxPrice));\n  }, [\n    filterOnPrice,\n    sortBy,\n    sortType,\n    minPrice,\n    maxPrice,\n    priceFilterString,\n    category,\n  ]);\n\n  return (\n    <div className={theme}>\n      <div className=\"categories\">\n        <button onClick={categoryTV} className=\"button\">\n          TVs\n        </button>\n        <button onClick={categoryLaptop} className=\"button\">\n          Laptops\n        </button>\n        <button onClick={categoryPS} className=\"button\">\n          PlayStation 5\n        </button>\n        <button onClick={categoryXB1} className=\"button\">\n          Xbox One\n        </button>\n        <button onClick={categoryHeadphones} className=\"button\">\n          Headphones\n        </button>\n      </div>\n      <div className=\"filters-products\">\n        <div className=\"filter-container\">\n          <div className=\"filter-heading\">FILTERS</div>\n          <div className=\"filters\">\n            <button onClick={filterPrice0to10} className=\"button\">\n              $0 - $10\n            </button>\n            <br></br>\n            <button onClick={filterPrice10to100} className=\"button\">\n              $10 - $100\n            </button>\n            <br></br>\n            <button onClick={filterPrice100to500} className=\"button\">\n              $100 - $500\n            </button>\n            <br></br>\n            <button onClick={filterPrice500AndMore} className=\"button\">\n              {\">\"}$500\n            </button>\n            <br></br>\n            <div>\n              <span>$</span>\n              <input\n                type=\"number\"\n                style={{ width: 70 }}\n                min=\"0\"\n                value={minPrice}\n                onChange={handleMinPrice}\n                className=\"input\"\n              ></input>\n              <span> - $</span>\n              <input\n                type=\"number\"\n                style={{ width: 70 }}\n                min=\"0\"\n                value={maxPrice}\n                onChange={handleMaxPrice}\n                className=\"input\"\n              ></input>\n              <br></br>\n              <br></br>\n              <button onClick={customPriceFilter} className=\"button\">\n                Set custom price filter.\n              </button>\n            </div>\n            <br></br>\n            <div>Sort By : </div>\n            <br></br>\n            <select name=\"sortBy\" onChange={sortByOption} className=\"input\">\n              <option value=\"salePrice\">Price</option>\n              <option value=\"customerReviewAverage\">\n                Customer Review Rating\n              </option>\n            </select>\n            <br></br>\n            <label>Sort Type : </label>\n            <br></br>\n            <select name=\"sortType\" onChange={sortTypeOption} className=\"input\">\n              <option value=\"asc\">Ascending</option>\n              <option value=\"dsc\">Descending </option>\n            </select>\n          </div>\n        </div>\n        <div>\n          {homeProducts.map((homeProduct) => {\n            return (\n              <Product key={homeProduct.sku} product={homeProduct}></Product>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EcommerceHome;\n","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/EcommerceHome/Product.js",["58"],[],"function Product(props) {\n  const {\n    product: { image, name, salePrice, sku, customerReviewAverage },\n  } = props;\n\n  const currentProduct = props.product;\n  currentProduct.quantity = 1;\n  function addToCart() {\n    const productsInCartString = localStorage.getItem(\"cart\");\n    const productsInCart = JSON.parse(productsInCartString);\n    const searchProductIndex = productsInCart.findIndex(\n      (element) => element.sku === sku\n    );\n    if (searchProductIndex > -1) {\n      productsInCart[searchProductIndex].quantity++;\n    } else {\n      productsInCart.push(currentProduct);\n    }\n\n    localStorage.setItem(\"cart\", JSON.stringify(productsInCart));\n  }\n  return (\n    <div className=\"product\">\n      <img src={image} className=\"product-image\"></img>\n      <div className=\"product-info\">\n        <div>\n          <b>Product ID :</b> {sku}\n        </div>\n        <br></br>\n        <div>\n          <b>Name :</b> {name}\n        </div>\n        <br></br>\n        <div>\n          <b>Price :</b> {salePrice}\n        </div>\n        <br></br>\n        <div>\n          <b>Customer Review Rating :</b> {customerReviewAverage}/5\n        </div>\n        <br></br>\n        <button onClick={addToCart} className=\"button\">\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Product;\n","/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Cart/Cart.js",[],[],"/Users/home/Desktop/Rippling Academy/week-3/e-commerce/src/Ecommerce/Cart/CartProduct.js",["59","60","61"],[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":20},{"ruleId":"62","severity":1,"message":"66","line":21,"column":12,"nodeType":"64","messageId":"65","endLine":21,"endColumn":33},{"ruleId":"62","severity":1,"message":"67","line":2,"column":22,"nodeType":"64","messageId":"65","endLine":2,"endColumn":30},{"ruleId":"62","severity":1,"message":"68","line":6,"column":11,"nodeType":"64","messageId":"65","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":18,"column":11,"nodeType":"71","endLine":18,"endColumn":97},{"ruleId":"62","severity":1,"message":"72","line":17,"column":18,"nodeType":"64","messageId":"65","endLine":17,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":94,"column":6,"nodeType":"75","endLine":102,"endColumn":4,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":7,"nodeType":"71","endLine":24,"endColumn":50},{"ruleId":"62","severity":1,"message":"77","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":39,"column":6,"nodeType":"75","endLine":39,"endColumn":16,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"70","line":42,"column":7,"nodeType":"71","endLine":42,"endColumn":50},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'initialzeLocalStorage' is defined but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggleTheme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'productsInCart'. Either include it or remove the dependency array.",["81"],{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [filterOnPrice, sortBy, sortType, minPrice, maxPrice, priceFilterString, category, fetchProducts]",{"range":"86","text":"87"},"Update the dependencies array to be: [productsInCart, quantity]",{"range":"88","text":"89"},[2691,2806],"[filterOnPrice, sortBy, sortType, minPrice, maxPrice, priceFilterString, category, fetchProducts]",[1143,1153],"[productsInCart, quantity]"]